"""
A flashcard is a set of two or more sides. Each side has a label and a text.
The label is used to specify which side of the flashcard is being shown to the user first for learning
and which sides he has to guess.
"""
type Flashcard {
    """
    Unique identifier of this flashcard.
    """
    id: UUID!
    """
    List of sides of this flashcard.
    """
    sides: [FlashcardSide!]!

    """
    Progress data of the flashcard, specific to given users.
    If userId is not provided, the progress data of the current user is returned.
    """
    userProgressData(userId: UUID): FlashcardProgressData!
}

type FlashcardProgressData {

    """
    A list of entries each representing the user completing the content item.
    Sorted by date in descending order.
    """
    log: [FlashcardProgressLogItem]!
    """
    The learning interval in days for the content item.
    """
    learningInterval: Int
    """
    The next time the content should be learned.
    Calculated using the date the user completed the content item and the learning interval.
    This is null if the user has not completed the content item once.
    """
    nextLearn: DateTime
}

type FlashcardProgressLogItem {
    """
    The date the user learned the flashcard.
    """
    date: DateTime!
    """
    Whether the user knew the flashcard or not.
    """
    success: Boolean!
}

type FlashcardSide {
    """
    Text of this flashcard side. This can be markdown.
    """
    text: String!
    """
    Label of this flashcard side. E.g. "Front" or "Back", or "Question" or "Answer".
    """
    label: String!
    """
    Whether this side is a question, i.e. should be shown to the user to guess the other sides or not.
    """
    isQuestion: Boolean!
}


input CreateFlashcardInput {
    """
    Id of the flashcard set this flashcard belongs to.
    """
    setId: UUID!
    """
    List of sides of this flashcard. Must be at least two sides.
    """
    sides: [CreateFlashcardSideInput!]! @ContainerSize(min: 2)
}

input CreateFlashcardSideInput {
    """
    Text of this flashcard side. This can be markdown. Max length is 3000 characters.
    """
    text: String! @Size(max: 3000)
    """
    Label of this flashcard side. E.g. "Front" or "Back", or "Question" or "Answer".
    """
    label: String! @NotBlank @Size(max: 255)
    """
    Whether this side is a question, i.e. should be shown to the user to guess the other sides or not.
    """
    isQuestion: Boolean!
}

input UpdateFlashcardInput {
    """
    Id of the flashcard to update.
    """
    id: UUID!
    """
    List of sides of this flashcard. Must be at least two sides.
    """
    sides: [UpdateFlashcardSideInput!]! @ContainerSize(min: 2)
}

input UpdateFlashcardSideInput {
    """
    Text of this flashcard side. This can be markdown. Max length is 3000 characters.
    """
    text: String! @Size(max: 3000)
    """
    Label of this flashcard side. E.g. "Front" or "Back", or "Question" or "Answer".
    """
    label: String! @NotBlank @Size(max: 255)
    """
    Whether this side is a question, i.e. should be shown to the user to guess the other sides or not.
    """
    isQuestion: Boolean!
}

"""
A set of flashcards. A flashcard set belongs to exactly one assessment. Therefore, the uuid of the assessment
also serves as the identifier of a flashcard set.
"""
type FlashcardSet {
    """
    The uuid of the assessment this flashcard set belongs to.
    This also serves as the identifier of this flashcard set.
    """
    assessmentId: UUID!
    """
    List of flashcards in this set.
    """
    flashcards: [Flashcard!]!
}

input CreateFlashcardSetInput {
    """
    The uuid of the assessment this flashcard set belongs to.
    """
    assessmentId: UUID!
    """
    List of flashcards in this set.
    """
    flashcards: [CreateFlashcardInSetInput!]!
}

input CreateFlashcardInSetInput {
    """
    List of sides of this flashcard. Must be at least two sides.
    """
    sides: [CreateFlashcardSideInput!]! @ContainerSize(min: 2)
}


input LogFlashcardLearnedInput {
    """
    The id of the flashcard that was learned.
    """
    flashcardId: UUID!
    """
    The id of the user that learned the flashcard.
    """
    userId: UUID!
    """
    If the user knew the flashcard or not.
    """
    successful: Boolean!
}

input LogFlashcardSetLearnedInput {
    """
    The id of the flashcard that was learned.
    """
    flashcardSetId: UUID!
    """
    The id of the user that learned the flashcard.
    """
    userId: UUID!
    """
    The percentage of flashcards in the set that the user knew.
    """
    percentageSuccess: Float!
}

